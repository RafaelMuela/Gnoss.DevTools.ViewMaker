@model ResourceViewModel
@using System.Reflection;
@using System.Drawing;

@{
    bool sherlock = false;
    ResourceModel FichaDocumento = Model.Resource;
    SemanticResourceModel semCmsModel = Model.SemanticFrom;

    string urlPersonalizacion = ViewBag.BaseURLContent + "/imagenes/proyectos/personalizacion/" + ViewBag.Comunidad.Key.ToString();

    // Idioma de navegaciÃ³n del usuario
    string idiomaNav = ViewBag.UtilIdiomas.LanguageCode;

    string palSobreEsp = "sobre";
    string palSobreEng = "on";
    string sobreIdiomaNav = null;
    switch (idiomaNav)
    {
        case "es":
            sobreIdiomaNav = palSobreEsp;
            break;
        case "en":
            sobreIdiomaNav = palSobreEng;
            break;
        default:
            sobreIdiomaNav = palSobreEsp;
            break;
    }

    string imagen = semCmsModel.GetFirstValuePropertyByPath("http://museodelprado.es/ontologia/ecidoc.owl#p65_E36_shows_visual_item");
    CommunityModel Comunidad = Html.GetComunidad();
    E78_Collection coleccion = null;
    SemanticPropertyModel propColeccionRelacionada = semCmsModel.GetPropertyByPath("http://museodelprado.es/ontologia/pradomuseum.owl#i_author_collection");
    if (propColeccionRelacionada != null && propColeccionRelacionada.PropertyValues != null && propColeccionRelacionada.PropertyValues.Count > 0)
    {
        coleccion = new E78_Collection(propColeccionRelacionada.PropertyValues.First().RelatedEntity);
    }

    string nombreCortoGrupos = "";
    if (((List<KeyValuePair<string, string>>)ViewBag.ListaInputHidden).Count(kvp => kvp.Key == "inpt_nombreGruposPerfilID") > 0)
    {
        nombreCortoGrupos = ((List<KeyValuePair<string, string>>)ViewBag.ListaInputHidden).Find(kvp => kvp.Key == "inpt_nombreGruposPerfilID").Value.ToLowerInvariant();
    }
    string[] grupos = nombreCortoGrupos.Split(',');
    bool esAdmin = grupos.Contains("administrado");

}

@{
    string nombreAutor = semCmsModel.GetFirstValuePropertyByPath("http://museodelprado.es/ontologia/ecidoc.owl#p131_E82_p102_has_title");
    string nombreAutorAumentado = semCmsModel.GetFirstValuePropertyByPath("http://museodelprado.es/ontologia/ecidoc.owl#p131_E82_p102_has_title_augmented");
    string lugarNacimientoAutor = semCmsModel.GetFirstValuePropertyByPath("http://museodelprado.es/ontologia/ecidoc.owl#p96_E67_p7_gave_birth_place");
    string fechaNacimientoAutor = semCmsModel.GetFirstValuePropertyByPath("http://museodelprado.es/ontologia/ecidoc.owl#p96_E67_p4_gave_birth_date");
    string lugarDefuncionAutor = semCmsModel.GetFirstValuePropertyByPath("http://museodelprado.es/ontologia/ecidoc.owl#p100i_E69_p7_death_place");
    string fechaDefuncionAutor = semCmsModel.GetFirstValuePropertyByPath("http://museodelprado.es/ontologia/ecidoc.owl#p100i_E69_p4_death_date");
    string descripcionAutor = semCmsModel.GetFirstValuePropertyByPath("http://www.cidoc-crm.org/cidoc-crm#p3_has_note");
    string descripcionAutorAumentado = semCmsModel.GetFirstValuePropertyByPath("http://www.cidoc-crm.org/cidoc-crm#p3_has_note_augmented");
    string genero = semCmsModel.GetFirstValuePropertyByPath("http://www.cidoc-crm.org/cidoc-crm#P2_has_type");

    int numeroDeObras = 0;

    SemanticPropertyModel propEtiquetas = semCmsModel.GetPropertyByPath("http://purl.org/muto/core#tagLabel");

    SemanticPropertyModel propObrasRelacionadas = semCmsModel.GetPropertyByPath("http://www.cidoc-crm.org/cidoc-crm#p14i_performed");

    if (propObrasRelacionadas != null && propObrasRelacionadas.OntologyPropInfo.EntitySelector.TotalEntitiesPagination > 0)
    {
        numeroDeObras = propObrasRelacionadas.OntologyPropInfo.EntitySelector.TotalEntitiesPagination;
    }
    else if (propObrasRelacionadas != null && propObrasRelacionadas.PropertyValues != null)
    {
        numeroDeObras = propObrasRelacionadas.PropertyValues.Count();
    }
    SemanticPropertyModel propObrasEfimeraRelacionadas = semCmsModel.GetPropertyByPath("http://museodelprado.es/ontologia/pradomuseum.owl#relatedEphemeralWork");
    SemanticPropertyModel propRecursosMultimedia = semCmsModel.GetPropertyByPath("http://museodelprado.es/ontologia/pradomuseum.owl#i_author_multimediaresource");
    SemanticPropertyModel propProductosTienda = semCmsModel.GetPropertyByPath("http://museodelprado.es/ontologia/pradomuseum.owl#i_author_product");
    string nombreCortoGadgetAutoresCoetaneos = "AutoresCoetaneos";
    GadgetModel gadgetAutoresCoetaneos = FichaDocumento.Gadgets.Find(gadget => gadget.ShortName == nombreCortoGadgetAutoresCoetaneos);
    bool mostrar = false;
    if (propRecursosMultimedia != null && propRecursosMultimedia.PropertyValues != null && propRecursosMultimedia.PropertyValues.Count > 0)
    {
        foreach (SemanticPropertyModel.PropertyValue recursoMultimedia in propRecursosMultimedia.PropertyValues)
        {
            string tipo = recursoMultimedia.RelatedEntity.GetFirstValuePropertyByPath("http://www.w3.org/1999/02/22-rdf-syntax-ns#type");
            string tipoRM = string.Empty;
            if (!string.IsNullOrEmpty(tipo) && tipo.Contains('#'))
            {
                tipoRM = tipo.Split(new Char[] { '#' }).Last();
            }
            if (tipoRM.Equals("Interactive") || tipoRM.Equals("Video"))
            {
                mostrar = true;
            }
        }
    }

    bool estaEnCronoscopio = false;
    string anioNacimientoAutor = semCmsModel.GetFirstValuePropertyByPath("http://museodelprado.es/ontologia/ecidoc.owl#p96_E67_p4_gave_birth_year");
    string anioDefuncionAutor = semCmsModel.GetFirstValuePropertyByPath("http://museodelprado.es/ontologia/ecidoc.owl#p100i_E69_p4_death_year");

    if (!string.IsNullOrEmpty(anioNacimientoAutor) && !string.IsNullOrEmpty(anioDefuncionAutor) && int.Parse(anioNacimientoAutor) >= 1100 && int.Parse(anioDefuncionAutor) <= 1987)
    {
        estaEnCronoscopio = true;
    }
}

<link media="all" type="text/css" rel="stylesheet" href="@urlPersonalizacion/ElPrado/css/modulos/efimera.css?v=@Html.GetVersion()-@Comunidad.VersionCSS" />
<section @Html.Raw(semCmsModel.GetRDFANamespaces()) @Html.Raw(semCmsModel.GetRDFAEntity(semCmsModel.RootEntities[0]))>

    @if (!string.IsNullOrEmpty(imagen))
    {
        string imagenAutor = ViewBag.BaseUrlContent + "/" + imagen;
        <section id="imagen-cabecera" class="imagen-cabecera" data-img="@imagenAutor" @Html.Raw(semCmsModel.GetRDFAPropertyByPath("http://museodelprado.es/ontologia/ecidoc.owl#p65_E36_shows_visual_item"))></section>
    }
    <section class="menu-nav">
        <nav>
            <div>

                <ul class="menu-normal">
                    @if (!string.IsNullOrEmpty(imagen))
                    {
                        string urlImagenObraCompleta = ViewBag.BaseUrlContent + "/" + imagen;
                        <li class="menu-imagen-cabecera">
                            <a>
                                <img style="height:30px" src="@Html.ObtenerImagenConTamano(urlImagenObraCompleta, 268)" alt="Miniatura obra" />
                            </a>
                        </li>
                    }
                    <li class="menu-ficha-obra"><a>@Html.Translate("INICIO")</a></li>
                    @if (numeroDeObras > 0)
                    {
                        if (coleccion == null)
                        {
                            <li class="menu-obras-autor"><a>@Html.Translate("OBRAS")</a></li>
                        }
                        else
                        {
                            <li class="menu-obras-autor"><a>@Html.Raw(coleccion.Dc_title)</a></li>
                        }
                    }
                    @if (coleccion != null && !string.IsNullOrEmpty(coleccion.Dc_description))
                    {
                        <li class="menu-cronologia"><a>@Html.Translate("CRONOLOGIA")</a></li>
                    }
                    @if (propObrasEfimeraRelacionadas != null && propObrasEfimeraRelacionadas.PropertyValues != null && propObrasEfimeraRelacionadas.PropertyValues.Count > 0)
                    {
                        <li class="menu-recomendados"><a>@Html.Translate("OBRASEFIMERASRELACIONADAS")</a></li>
                    }
                    @if (mostrar)
                    {
                        <li class="menu-multimedia"><a>@Html.Translate("MULTIMEDIA")</a></li>
                    }

                    @if (gadgetAutoresCoetaneos != null && !string.IsNullOrEmpty(anioNacimientoAutor))
                    {
                        <li class="menu-coetaneos"><a>@Html.Translate("AUTORESCOETANEOS")</a></li>
                    }
                    @if (propProductosTienda != null && propProductosTienda.PropertyValues != null && propProductosTienda.PropertyValues.Count > 0)
                    {
                        <li class="menu-tienda-prado"><a>@Html.Translate("TIENDAPRADO")</a></li>
                    }
                </ul>
                <div class="menu-small">
                    <select class="select-custom">
                        @if (!string.IsNullOrEmpty(imagen))
                        {
                            <option value="menu-imagen-cabecera">@Html.Translate("INICIO")</option>
                        }
                        else
                        {
                            <option value="menu-ficha-obra">@Html.Translate("INICIO")</option>
                        }
                        @if (numeroDeObras > 0)
                        {
                            if (coleccion == null)
                            {
                                <option value="menu-obras-autor">@Html.Translate("OBRAS")</option>
                            }
                            else
                            {
                                <option value="menu-obras-autor">@Html.Raw(coleccion.Dc_title)</option>
                            }

                        }
                        @if (coleccion != null && !string.IsNullOrEmpty(coleccion.Dc_description))
                        {
                            <option value="menu-cronologia">@Html.Translate("CRONOLOGIA")</option>
                        }
                        @if (propObrasEfimeraRelacionadas != null && propObrasEfimeraRelacionadas.PropertyValues != null && propObrasEfimeraRelacionadas.PropertyValues.Count > 0)
                        {
                            <option value="menu-recomendados">@Html.Translate("OBRASEFIMERASRELACIONADAS")</option>
                        }
                        @if (mostrar)
                        {
                            <option value="menu-multimedia">@Html.Translate("MULTIMEDIA")</option>
                        }
                        @if (gadgetAutoresCoetaneos != null && !string.IsNullOrEmpty(anioNacimientoAutor))
                        {
                            <option value="menu-coetaneos">@Html.Translate("AUTORESCOETANEOS")</option>
                        }
                        @if (propProductosTienda != null && propProductosTienda.PropertyValues != null && propProductosTienda.PropertyValues.Count > 0)
                        {
                            <option value="menu-tienda-prado">@Html.Translate("TIENDAPRADO")</option>
                        }
                    </select>
                </div>
            </div>
        </nav>
    </section>
    <section class="ficha-obra" id="ficha-obra">
        <div class="obra-autor">
            <article>


                @if (!string.IsNullOrEmpty(nombreAutor))
                {
                    if (sherlock && !string.IsNullOrEmpty(nombreAutorAumentado))
                    {
                        <h1 @Html.Raw(semCmsModel.GetRDFAPropertyByPath("http://museodelprado.es/ontologia/ecidoc.owl#p131_E82_p102_has_title"))>@Html.Raw(@nombreAutorAumentado)@*<span class="ly-miprado"><a href="#">AÃ±adir a Mi Prado</a></span>*@</h1>
                    }
                    else
                    {
                        <h1 @Html.Raw(semCmsModel.GetRDFAPropertyByPath("http://museodelprado.es/ontologia/ecidoc.owl#p131_E82_p102_has_title"))>@nombreAutor@*<span class="ly-miprado"><a href="#">AÃ±adir a Mi Prado</a></span>*@</h1>
                    }
                }

                @{
                    string infoAutor = string.Empty;

                    if (!string.IsNullOrEmpty(lugarNacimientoAutor))
                    {
                        string htmlLugarNacimiento = "<span " + semCmsModel.GetRDFAPropertyByPath("http://museodelprado.es/ontologia/ecidoc.owl#p96_E67_p7_gave_birth_place") + ">" + lugarNacimientoAutor + "</span>";
                        infoAutor = htmlLugarNacimiento;
                    }

                    if (!string.IsNullOrEmpty(fechaNacimientoAutor))
                    {
                        string htmlFechaNacimientoAutor = "<span " + semCmsModel.GetRDFAPropertyByPath("http://museodelprado.es/ontologia/ecidoc.owl#p96_E67_p4_gave_birth_date") + ">" + fechaNacimientoAutor + "</span>";

                        if (!string.IsNullOrEmpty(infoAutor))
                        {
                            infoAutor = string.Concat(infoAutor, ", ", htmlFechaNacimientoAutor);
                        }
                        else
                        {
                            infoAutor = htmlFechaNacimientoAutor;
                        }
                    }


                    if (!string.IsNullOrEmpty(lugarDefuncionAutor))
                    {
                        string htmlLugarDefuncionAutor = "<span " + semCmsModel.GetRDFAPropertyByPath("http://museodelprado.es/ontologia/ecidoc.owl#p100i_E69_p7_death_place") + ">" + lugarDefuncionAutor + "</span>";

                        if (!string.IsNullOrEmpty(infoAutor))
                        {
                            infoAutor = string.Concat(infoAutor, " - ", htmlLugarDefuncionAutor);
                        }
                        else
                        {
                            infoAutor = htmlLugarDefuncionAutor;
                        }
                    }


                    if (!string.IsNullOrEmpty(fechaDefuncionAutor))
                    {
                        string htmlFechaDefuncionAutor = "<span " + semCmsModel.GetRDFAPropertyByPath("http://museodelprado.es/ontologia/ecidoc.owl#p100i_E69_p4_death_date") + ">" + fechaDefuncionAutor + "</span>";

                        if (!string.IsNullOrEmpty(infoAutor))
                        {
                            infoAutor = string.Concat(infoAutor, ", ", htmlFechaDefuncionAutor);
                        }
                        else
                        {
                            infoAutor = htmlFechaDefuncionAutor;
                        }
                    }

                    if (!string.IsNullOrEmpty(infoAutor))
                    {
                        <strong class="subtitulo">@Html.Raw(infoAutor)</strong>
                    }
                }
                <div @Html.Raw(semCmsModel.GetRDFAPropertyByPath("http://www.cidoc-crm.org/cidoc-crm#p3_has_note"))>
                    @if (sherlock && !string.IsNullOrEmpty(descripcionAutorAumentado))
                    {
                        <p class="colapsado normal">@Html.Raw(Html.DeleteFirstParagraph(descripcionAutorAumentado))</p>
                    }
                    else
                    {
                        <p class="colapsado normal">@Html.Raw(Html.DeleteFirstParagraph(descripcionAutor))</p>
                    }
                </div>
                @{

                    SemanticPropertyModel enciclopediaEnlazada = semCmsModel.GetPropertyByPath("http://museodelprado.es/ontologia/pradomuseum.owl#i_author_encyclopedia@@@http://museodelprado.es/ontologia/pradomuseum.owl#encyclopediaEntryName");

                    if ((enciclopediaEnlazada != null && enciclopediaEnlazada.PropertyValues != null && enciclopediaEnlazada.PropertyValues.Count > 0) || (estaEnCronoscopio))
                    {
                        <ul class="enlaces-pag">
                            @if (enciclopediaEnlazada != null && enciclopediaEnlazada.PropertyValues != null && enciclopediaEnlazada.PropertyValues.Count > 0)
                            {
                                string enlaceRecEnciclopedia = enciclopediaEnlazada.FirstPropertyValue.DownloadUrl;
                                <li><a href="@enlaceRecEnciclopedia">@Html.Translate("VERVOZDELAENCICLOPEDIA")</a></li>
                            }
                            @if (estaEnCronoscopio)
                            {
                                <li><a target="_blank" class="cronoscopio" href="@Html.GetComunidad().Url/@Html.Translate("URL_CRONOSCOPIO")?search=@semCmsModel.RootEntities[0].Entity.Uri">
                                        <span>
                                            @if (genero == "http://museodelprado.es/items/gender_female")
                                            {
                                                @Html.Translate("VER_AUTORA_EN_LINEA_DEL_TIEMPO")
                                            }
                                            else
                                            {
                                                @Html.Translate("VER_AUTOR_EN_LINEA_DEL_TIEMPO")
                                            }
                                        </span>
                                    
                                    </a></li>
                            }
                        </ul>
                    }





                }

            </article>
        </div>
        <div class="side-der">
            @{ResourceModel fichaRecurso = Model.Resource;
                ResourceModel.ActionsModel acciones = fichaRecurso.Actions;

                if (sherlock && acciones.Edit)
                {
                    <a class="botones-centrados bc-estandar hv-estandar sherlockAnotateAuthor">
                        <span class="txt">Anotar</span>
                    </a>
                    <a class="botones-centrados bc-estandar hv-estandar sherlockDeleteAnotateAuthor">
                        <span class="txt">Eliminar anotaciÃ³n</span>
                    </a>
                }
            }
            @if (propEtiquetas != null && propEtiquetas.PropertyValues != null && propEtiquetas.PropertyValues.Count > 0)
            {
                <div class="tags">
                    <h1>Etiquetas</h1>
                    @foreach (SemanticPropertyModel.PropertyValue propTag in propEtiquetas.PropertyValues)
                    {
                        if (propTag != null && propTag.Value != null)
                        {
                            <span @Html.Raw(propEtiquetas.GetRDFA())><a href="@FichaDocumento.UrlSearch?search=@propTag.Value">@propTag.Value</a></span>
                        }

                    }

                </div>
                <h2>@Html.Translate("RDF")</h2>
                <p><a class="ico-rdf" href="@Html.GetURLRDF()">RDF</a></p>
            }
        </div>
    </section>

    @{ if (coleccion == null)
        {
            if (propObrasRelacionadas != null && propObrasRelacionadas.PropertyValues != null && propObrasRelacionadas.PropertyValues.Count > 0)
            {
                if (numeroDeObras > 0)
                {
                    <div id="obras-autor" class="obras">
                        <h1><span>@Html.Translate("OBRAS") <strong>(<span @Html.Raw(semCmsModel.GetRDFAPropertyByPath("http://museodelprado.es/ontologia/pradomuseum.owl#artWorkNumber"))>@numeroDeObras</span>)</strong></span></h1>
                        <form novalidate="novalidate">
                            <ul class="vista-selector">
                                <li class="miniaturas selected" data-mode="miniaturas"><a>@Html.Translate("IMAGENES")</a></li>
                                <li class="listado" data-mode="listado"><a>@Html.Translate("LISTADO")</a></li>
                                <li class="galeria" data-mode="big-galeria"><a>@Html.Translate("GALERIA")</a></li>
                            </ul>
                        </form>
                        <div class="mostrable miniaturas">

                            @if (!string.IsNullOrEmpty(propObrasRelacionadas.SpecificationProperty.SelectorEntidad.VistaPersonalizadaPaginacion))
                            {
                                @Html.PartialView(propObrasRelacionadas.SpecificationProperty.SelectorEntidad.VistaPersonalizadaPaginacion, propObrasRelacionadas)
                            }
                            else
                            {
                                @Html.PartialView("SemCms/_PropiedadOntoSelectorEntidadLectura", propObrasRelacionadas)
                            }
                        </div>
                    </div>
                    <section class="mostrable big-galeria oculto"></section>
                }
            }
        }
        else
        {
            <div id="obras-autor" class="obras enelprado">
                <h1 class="talen"><span>@Html.Raw(coleccion.Dc_title)</span></h1>
                <div class="menutalen">
                    <ul class="nivel1">
                        @foreach (Pm_Subcollection_1 subcolec1 in coleccion.Pm_subcollection_1)
                        {<li class="@(subcolec1.Equals(coleccion.Pm_subcollection_1.First())?"on":"")">
                                <a data-value="@subcolec1.Pm_order" data-id="@subcolec1.Dc_title.Replace(" ", "")" class="menuopen"
                                   @(!string.IsNullOrEmpty(subcolec1.multiLan_filter) ? "filter-value=" + subcolec1.multiLan_filter : "")>@subcolec1.Dc_title</a>
                                @if (subcolec1.Pm_subcollection_2.Count > 0)
                                {
                                    <div class="dot">&nbsp;</div>
                                }
                                @if (!string.IsNullOrEmpty(subcolec1.Dc_description))
                                {
                                    <div class="oculto descripMenu">
                                        @Html.Raw(subcolec1.Dc_description)
                                    </div>
                                }
                                @if (subcolec1.Pm_artworkOrder.Count > 0)
                                {
                                    <select class="oculto filtrosMenu">
                                        @foreach (Pm_Order ordenC in subcolec1.Pm_artworkOrder)
                                        {
                                            <option value="@ordenC.Pm_value">@ordenC.Dc_title</option>
                                        }
                                    </select>
                                }
                            </li>}@foreach (Pm_Link link in coleccion.Sioc_links_to)
                        {<li>
                                <a href="@link.Pm_value">@link.Dc_title</a>
                            </li>}
                    </ul>
                    @foreach (Pm_Subcollection_1 subcolec1 in coleccion.Pm_subcollection_1)
                    {
                        if (subcolec1.Pm_subcollection_2.Count > 0)
                        {
                            <ul class="nivel2" id="@subcolec1.Dc_title.Replace(" ", "")">
                                @foreach (Pm_Subcollection_2 subcolec2 in subcolec1.Pm_subcollection_2)
                                {
                                    if (string.IsNullOrEmpty(subcolec2.Dc_description) && subcolec2.Pm_subcollection_3.Count > 0)
                                    {
                                        <li id="menu_@subcolec2.Dc_title.Replace(" ", "")">
                                            <a data-value="@subcolec2.Pm_order" class="menuopen2" @(!string.IsNullOrEmpty(subcolec2.multiLan_filter) ? "filter-value=" + subcolec2.multiLan_filter : "")>@subcolec2.Dc_title</a>
                                            <ul class="nivel3">
                                                @foreach (Pm_Subcollection_3 subcolec3 in subcolec2.Pm_subcollection_3)
                                                {
                                                    <li>
                                                        <a @(!string.IsNullOrEmpty(subcolec3.multiLan_filter) ? "filter-value=" + subcolec3.multiLan_filter : "")>@subcolec3.Dc_title</a>
                                                        @if (!string.IsNullOrEmpty(subcolec3.Dc_description))
                                                        {
                                                            <div class="oculto descripMenu">
                                                                @Html.Raw(subcolec3.Dc_description)
                                                            </div>
                                                        }
                                                        @if (subcolec3.Pm_artworkOrder.Count > 0)
                                                        {
                                                            <select class="oculto filtrosMenu">
                                                                @foreach (Pm_Order ordenC in subcolec3.Pm_artworkOrder)
                                                                {
                                                                    <option value="@ordenC.Pm_value">@ordenC.Dc_title</option>
                                                                }
                                                            </select>
                                                        }
                                                    </li>
                                                }
                                            </ul>
                                        </li>
                                    }
                                    else
                                    {
                                        <li>
                                            <a @(!string.IsNullOrEmpty(subcolec2.multiLan_filter) ? "filter-value=" + subcolec2.multiLan_filter : "")>@subcolec2.Dc_title</a>

                                            @if (!string.IsNullOrEmpty(subcolec2.Dc_description))
                                            {
                                                <div class="oculto descripMenu">
                                                    @Html.Raw(subcolec2.Dc_description)
                                                </div>
                                            }
                                            @if (subcolec2.Pm_artworkOrder.Count > 0)
                                            {
                                                <select class="oculto filtrosMenu">
                                                    @foreach (Pm_Order ordenC in subcolec2.Pm_artworkOrder)
                                                    {
                                                        <option value="@ordenC.Pm_value">@ordenC.Dc_title</option>
                                                    }
                                                </select>
                                            }
                                            @if (subcolec2.Pm_subcollection_3.Count > 0)
                                            {
                                                <div class="oculto itemsSubMenu">
                                                    @foreach (Pm_Subcollection_3 subcolec3 in subcolec2.Pm_subcollection_3)
                                                    {

                                                        <a @(!string.IsNullOrEmpty(subcolec3.multiLan_filter) ? "filter-value=" + subcolec3.multiLan_filter : "")>@subcolec3.Dc_title</a>
                                                    }
                                                </div>
                                            }
                                        </li>
                                    }
                                }
                            </ul>
                        }
                    }
                </div>
                <script language="javascript">
                    $(document).ready(function () {
                        $('.nivel2').hide();
                        $('.menuopen').click(function (e) {
                            var num = $(e.target).attr('data-value');
                            var id = $(e.target).attr('data-id');
                            $('.nivel1 li').removeClass('on');
                            $('.menuopen2').removeClass('on');
                            $('.nivel2,.nivel3').hide();
                            if (id) {
                                $('#' + id + " li").hide();
                                $('#' + id).slideDown(300, function () { $('.nivel2 li').fadeIn(200); });
                            }
                            $(e.target).parent().addClass('on');
                            ActualizarDescMenu($(this).parent());
                        });
                        $(".nivel2>li a").not(".nivel2 li ul li a").click(function (e) {
                            $(".nivel2>li a").removeClass('on');
                            $(".nivel3").hide();
                            $(e.target).addClass("on");
                            ActualizarDescMenu($(this).parent());
                        });
                        $('.menuopen2').click(function (e) {
                            var id = e.target.parentElement.id;
                            $("#" + id + " .nivel3").fadeIn();
                            ActualizarDescMenu($(this).parent());
                        });

                        $(".nivel3>li a").click(function (e) {
                            $(".nivel3>li a").removeClass('on');
                            $(e.target).addClass("on");
                            ActualizarDescMenu($(this).parent());
                        });

                        $(".orden .select-custom").change(function () {
                            RealizarFiltradoAutor($('#filtroActivo').attr('value'), 1, true);
                        });
                    });

                    function ActualizarDescMenu(itemMenu) {
                        if (itemMenu.find(">.descripMenu").size() > 0) {
                            if ($('ul.nivel1 li').find('a').attr('filter-value') == itemMenu.find('a').attr('filter-value')) {
                                $(".secciontit").html('');
                            }
                            else {
                                $(".secciontit").html(itemMenu.find("a").html());
                            }
                            if (itemMenu.find(">.itemsSubMenu a").length > 0) {
                                $(".resultados span").html(itemMenu.find(">.itemsSubMenu a").first().html());
                            } else {
                                $(".resultados span").html(itemMenu.find("a").html());
                            }

                            $("#tagsSubmenuObras").html('');
                            $("#descripcionMenuObras").html('<div class="texto colapsado normal"></div>');
                            $("#descripcionMenuObras .colapsado").html(itemMenu.find(">.descripMenu").html());
                            $('#descripcionMenuObras .colapsado').expander({ //Leer mÃ¡s (texto inline normal)
                                slicePoint: 700,
                                preserveWords: true,
                                //expandPrefix:     '|',
                                expandText: '<span class="mas-info">| <span>+</span></span>',
                                userCollapseText: '<span class="mas-info">| <span>-</span></span>',
                                afterExpand: function () {
                                    $(this).find($('span.details')).css('display', 'inline');
                                }
                            });
                        }
                        if (itemMenu.find(">.itemsSubMenu").size() > 0) {
                            $("#tagsSubmenuObras").html(itemMenu.find(">.itemsSubMenu").html());
                            $("#tagsSubmenuObras a").first().addClass("on");
                            $("#tagsSubmenuObras a").click(function (e) {
                                $("#tagsSubmenuObras a").removeClass('on');
                                $(e.target).addClass("on");
                                $(".resultados span").html($(e.target).html());
                                RealizarFiltradoAutor($(e.target).attr('filter-value'), 1, true);
                            });
                        }
                        //Filtramos en caso de tener filtro:
                        if (itemMenu.find('a').attr('filter-value')) {
                            while ($('.orden .select-custom option').size() > 2) {
                                $('.orden .select-custom option').first().remove();
                            }
                            if (itemMenu.find(">.filtrosMenu").size() > 0) {
                                $('.orden .select-custom').prepend(itemMenu.find(">.filtrosMenu").html());
                            }
                            $('.orden .select-custom option:first-child').attr("selected", "selected");
                            $(".orden .select-custom").heapbox("update");
                            //Hacemos que cambie el <select> que hay oculto para que salte la excepciÃ³n
                            setTimeout(function () {
                                $('.orden .heap .heapOptions .heapOption a').click(function (e) {
                                    $('.orden .select-custom').change();
                                });
                            }, 100);
                            RealizarFiltradoAutor(itemMenu.find('a').attr('filter-value'), 1, true);
                        }
                    }

                    function RealizarFiltradoAutor(filtro, pagina, reemplazarValores) {
                        var that = this;
                        that.replace = reemplazarValores;
                        that.filtro = filtro;
                        var tiposMetabuscador = [];
                        for (j = 0; j < filtro.split("&").length; j++) {
                            tiposMetabuscador.push(filtro.split("&")[j]);
                        }
                        var parametrosAdicionales = "PestanyaActualID=" + idPestanyaObras + "|rdf:type=pmartwork|";

                        var parametros = '';
                        for (k = 0; k < tiposMetabuscador.length; k++) {
                            parametros += tiposMetabuscador[k] + "|";
                        }

                        var orden = $('.orden .select-custom').val();;
                        parametros += 'ordenarPor=' + orden + "|";
                        parametrosAdicionales += 'ordenarPor=' + orden + "|";
                        var params = {};

                        params['pUsarMasterParaLectura'] = bool_usarMasterParaLectura;
                        params['pProyectoID'] = $('input.inpt_proyID').val();
                        params['pEsUsuarioInvitado'] = $('input.inpt_bool_esUsuarioInvitado').val() == 'True';
                        params['pIdentidadID'] = $('input.inpt_identidadID').val();
                        params['pParametros'] = parametros + "|pagina=" + pagina;
                        params['pLanguageCode'] = $('input.inpt_Idioma').val();
                        params['pPrimeraCarga'] = false;
                        params['pAdministradorVeTodasPersonas'] = false;
                        params['pTipoBusqueda'] = 0;
                        params['pNumeroParteResultados'] = 1;
                        params['pGrafo'] = $('input.inpt_proyID').val();
                        params['pFiltroContexto'] = '';
                        params['pParametros_adiccionales'] = parametrosAdicionales + 'numeroResultados=9';
                        params['cont'] = '';
                        if (that.replace) {
                            $('.obras .mostrable').html('');
                            $('.resultados a').hide();
                            $('#filtroActivo').attr('value', filtro);
                            var urlBusquedaColeccion = $('.resultados a').prop('href').split('?')[0];
                            urlBusquedaColeccion += '?' + filtro + '&ordenarPor=' + orden;
                            $('.resultados a').prop('href', urlBusquedaColeccion);
                        }
                        $.post(obtenerUrl($('input.inpt_UrlServicioResultados').val()) + "/CargarResultados", params, function (data) {
                            var resultadoJson = JSON.parse(data);
                            var htmlRespuesta = $('<div>').html(resultadoJson.Value);
                            var resultados = htmlRespuesta.find('.mostrable.miniaturas figure');
                            if (that.replace) {
                                $('.resultados a strong').html(resultadoJson.Key);
                                $('.resultados a').show();
                                $('.obras .mostrable').html(htmlRespuesta.find('.miniaturas').html());
                                //Montamos el verMas
                                if (resultadoJson.Key > 9) {
                                    $('.obras .mostrable').append('<div class="ver-mas-general"><a datapage="2">Ver mÃ¡s</a></div >');
                                }
                                $(".obras .mostrable > .ver-mas-general").click(function (e) {
                                    $(".obras .mostrable > .ver-mas-general").hide();
                                    RealizarFiltradoAutor(that.filtro, $(".obras .mostrable > .ver-mas-general a").attr('datapage'), false);
                                });

                            } else {
                                $(".obras .mostrable .ver-mas-general").before(htmlRespuesta.find('.miniaturas').html());

                                //Si no hay mas resultados eliminamos el boton
                                if (resultados.length < 9 || $('.resultados strong').html() == $('.mostrable.miniaturas figure').length) {
                                    $(".obras .mostrable .ver-mas-general").remove();
                                } else {
                                    var pageActual = $(".obras .mostrable .ver-mas-general a").attr('datapage');
                                    var sigPagina = parseInt(pageActual) + 1;
                                    $(".obras .mostrable .ver-mas-general a").attr('datapage', sigPagina);
                                    $(".obras .mostrable > .ver-mas-general").show();
                                }
                            }
                            truncarTexto();
                        });
                        return;
                    }
                </script>
                <h2 class="secciontit"></h2>
                <div id="descripcionMenuObras">
                    <div class="texto colapsado normal">
                        @Html.Raw(coleccion.Pm_subcollection_1.First().Dc_description)
                    </div>
                </div>
                <div class="tags" id="tagsSubmenuObras">
                </div>
                @if (propObrasRelacionadas != null && propObrasRelacionadas.PropertyValues != null && propObrasRelacionadas.PropertyValues.Count > 0)
                {
                    if (numeroDeObras > 0)
                    {
                        <div class="resultados">
                            <p><span>@coleccion.Pm_subcollection_1.First().Dc_title</span>: <a href="/@Html.Translate("URLOBRAS")?@coleccion.Pm_subcollection_1.First().multiLan_filter&ordenarPor=pm:relevance,ecidoc:p62_E52_p79_has_time-span_beginning|orden=asc"><strong>@numeroDeObras</strong> @Html.Translate("OBRAS").ToLower()</a></p>
                        </div>
                        <form novalidate="novalidate">
                            <span class="orden panelOrdenContenedor">
                                <label for="orden">Orden:</label>
                                <div class="oculto" id="filtroActivo" value="@coleccion.Pm_subcollection_1.First().multiLan_filter"></div>
                                <select class="select-custom filtro" id="orden">
                                    <option value="pm:relevance,ecidoc:p62_E52_p79_has_time-span_beginning|orden=asc" selected="selected">@Html.Translate("CRONOLOGICO")</option>
                                    <option value="ecidoc:p102_E35_p3_has_title|orden=asc">@Html.Translate("ALFABETICO")</option>
                                </select>
                            </span>
                            <ul class="vista-selector">
                                <li class="miniaturas selected" data-mode="miniaturas"><a>@Html.Translate("IMAGENES")</a></li>
                                <li class="listado" data-mode="listado"><a>@Html.Translate("LISTADO")</a></li>
                                <li class="galeria" data-mode="big-galeria"><a>@Html.Translate("GALERIA")</a></li>
                            </ul>
                        </form>
                        <div class="mostrable miniaturas clr">

                            @if (!string.IsNullOrEmpty(propObrasRelacionadas.SpecificationProperty.SelectorEntidad.VistaPersonalizadaPaginacion))
                            {
                                @Html.PartialView(propObrasRelacionadas.SpecificationProperty.SelectorEntidad.VistaPersonalizadaPaginacion, propObrasRelacionadas)
                            }
                            else
                            {
                                @Html.PartialView("SemCms/_PropiedadOntoSelectorEntidadLectura", propObrasRelacionadas)
                            }
                        </div>
                    }
                }
            </div>
            <section class="mostrable big-galeria oculto clr"></section>
        }
    }
    @if (coleccion != null && !string.IsNullOrEmpty(coleccion.Dc_description))
    {
        <section class="biografia" id="cronologia">
            @Html.Raw(coleccion.Dc_description)
        </section>
    }
    @if (propObrasEfimeraRelacionadas != null && propObrasEfimeraRelacionadas.PropertyValues != null && propObrasEfimeraRelacionadas.PropertyValues.Count > 0)
    {
        string rutaInicial = ViewBag.BaseUrlContent + "/";
        <section class="efimera galeria" id="recomendados">
            <link href="css/modulos/efimera.css" media="all" rel="stylesheet" type="text/css">
            <div class="wrap cnt">
                <h2>@Html.Translate("OBRASEFIMERASRELACIONADAS") </h2>
            </div>

            <div class="galeria">
                @foreach (SemanticPropertyModel.PropertyValue recursoEfimeroRelacionado in propObrasEfimeraRelacionadas.PropertyValues)
                {
                    try
                    {
                        List<E36_Visual_Item> listImages = new List<E36_Visual_Item>();
                        SemanticPropertyModel propCidoc_p65_shows_visual_item = recursoEfimeroRelacionado.RelatedEntity.GetPropertyByPath("http://www.cidoc-crm.org/cidoc-crm#p65_shows_visual_item");
                        if (propCidoc_p65_shows_visual_item != null && propCidoc_p65_shows_visual_item.PropertyValues.Count > 0)
                        {
                            foreach (SemanticPropertyModel.PropertyValue propValue in propCidoc_p65_shows_visual_item.PropertyValues)
                            {
                                E36_Visual_Item cidoc_p65_shows_visual_item = new E36_Visual_Item(propValue.RelatedEntity);
                                listImages.Add(cidoc_p65_shows_visual_item);
                            }
                        }
                        listImages = listImages.OrderBy(x => x.Pm_order).ToList();
                        SemanticPropertyModel propTipoEfi = recursoEfimeroRelacionado.RelatedEntity.GetPropertyByPath("http://museodelprado.es/ontologia/pradomuseum.owl#type");
                        string tipoEfi = "";
                        if (propTipoEfi != null && propTipoEfi.PropertyValues != null)
                        {
                            tipoEfi = propTipoEfi.PropertyValues.First().RelatedEntity.GetFirstValuePropertyByPath("http://museodelprado.es/ontologia/multilang-property.owl#textValue");

                        }
                        string tituloEfi = recursoEfimeroRelacionado.RelatedEntity.GetFirstValuePropertyByPath("http://museodelprado.es/ontologia/ecidoc.owl#p102_E35_p3_has_title");
                        string urlEfi = recursoEfimeroRelacionado.RelatedEntity.GetPropertyByPath("http://museodelprado.es/ontologia/ecidoc.owl#p102_E35_p3_has_title").FirstPropertyValue.DownloadUrl;
                        //string urlEfi = recursoEfimeroRelacionado.DownloadUrl;
                        string imagenEfi = "";
                        if (listImages.Count > 0)
                        {
                            imagenEfi = listImages.First().Ecidoc_p3_has_note;
                        }
                        string[] partes = imagenEfi.Split(new string[] { "." }, StringSplitOptions.None);
                        string urlImg = partes[0] + "_450." + partes[1];

                        <div class="item">
                            <figure>
                                <a href="@urlEfi">
                                    <div class="img" style="background-image:url(@rutaInicial@urlImg);">
                                    </div>
                                </a>
                                <figcaption>
                                    <strong class="upper">@tipoEfi</strong>
                                    <h3>@tituloEfi</h3>
                                </figcaption>
                            </figure>
                        </div>
                    }
                    catch (Exception e)
                    {

                    }
                }


            </div>
        </section>
    }
    }
    <script>
        $(document).ready(function () {
            // GALERIA CABECERA
            var numeroslides = $('#cabecera .galeria .item').length;
            $('#cabecera .galeria').slick({
                infinite: false,
                swipeToSlide: true,
                slidesToShow: 1,
                dots: numeroslides > 1
            });
            // GALERIA NORMAL
            var numeroslides = $('#recomendados .galeria .item').length;
            var slideInicialCuatro = 0;
            var slideInicialTres = 0;
            var slideInicialDos = 0;
            if (numeroslides > 4) slideInicialCuatro = 2;
            if (numeroslides > 3) slideInicialTres = 1;
            if (numeroslides > 2) slideInicialDos = 1;
            $('#recomendados .galeria').slick({
                infinite: false,
                swipeToSlide: true,
                slidesToShow: 4,
                slidesToScroll: 4,
                centerMode: true,
                initialSlide: slideInicialCuatro,
                responsive: [
                    {
                        breakpoint: 1600,
                        settings: {
                            slidesToShow: 3,
                            slidesToScroll: 3,
                            initialSlide: slideInicialTres
                        }
                    },
                    {
                        breakpoint: 768,
                        settings: {
                            slidesToShow: 2,
                            slidesToScroll: 2,
                            initialSlide: slideInicialDos
                        }
                    },
                    {
                        breakpoint: 600,
                        settings: {
                            slidesToShow: 1,
                            slidesToScroll: 1,
                            initialSlide: 0
                        }
                    }
                ]
            });

        });
    </script>

    @{
        if (mostrar)
        {
            <section class="multimedia" id="multimedia">
                <h2 class="heading">@Html.Translate("MULTIMEDIA")</h2>
                <div class="loop carousel inactive">
                    @foreach (SemanticPropertyModel.PropertyValue recursoMultimedia in propRecursosMultimedia.PropertyValues)
                    {

                        string tituloRM = "";
                        string enlaceRM = "";
                        SemanticPropertyModel propTitulo = recursoMultimedia.RelatedEntity.GetPropertyByPath("http://purl.org/vocab/frbr/core#p3020_has_title_of_the_manifestation");
                        if (propTitulo != null && propTitulo.PropertyValues.Count > 0)
                        {
                            tituloRM = propTitulo.FirstPropertyValue.Value;
                            enlaceRM = propTitulo.FirstPropertyValue.DownloadUrl;
                        }


                        string duracionRM = recursoMultimedia.RelatedEntity.GetFirstValuePropertyByPath("http://museodelprado.es/ontologia/pradomuseum.owl#duration");
                        string urlRM = recursoMultimedia.RelatedEntity.GetFirstValuePropertyByPath("http://museodelprado.es/ontologia/pradomuseum.owl#url");
                        string imagenRM = recursoMultimedia.RelatedEntity.GetFirstValuePropertyByPath("http://museodelprado.es/ontologia/pradomuseum.owl#image");
                        string tipo = recursoMultimedia.RelatedEntity.GetFirstValuePropertyByPath("http://www.w3.org/1999/02/22-rdf-syntax-ns#type");
                        string tipoRM = string.Empty;

                        if (!string.IsNullOrEmpty(tipo) && tipo.Contains('#'))
                        {
                            tipoRM = tipo.Split(new Char[] { '#' }).Last();
                        }
                        if (tipoRM.Equals("Interactive"))
                        {
                            <div class="slide">
                                <figure>
                                    @if (string.IsNullOrEmpty(imagenRM))
                                    {
                                        <div class="thumb imgwrap">
                                            <a href="@enlaceRM">
                                                <div class="no-img">
                                                    <div class="outer">
                                                        <span>@Html.Translate("IMAGENNODISPONIBLE")</span>
                                                    </div>
                                                </div>
                                            </a>
                                        </div>
                                    }
                                    else
                                    {
                                        <a href="@enlaceRM">
                                            @if (!string.IsNullOrEmpty(imagenRM))
                                            {
                                                <img alt="@tituloRM" src="@ViewBag.BaseURLContent/@imagenRM" />
                                            }
                                        </a>
                                    }
                                    <figcaption>
                                        <strong class="media-type">@Html.Translate("INTERACTIVO")</strong>
                                        @if (!string.IsNullOrEmpty(tituloRM))
                                        {
                                            <h3 class="name">
                                                <a href="@enlaceRM">
                                                    <span>@Html.Raw(tituloRM)</span>
                                                </a>
                                            </h3>
                                        }
                                    </figcaption>
                                </figure>
                            </div>
                        }
                        else if (!string.IsNullOrEmpty(urlRM)&&(urlRM.ToLower().Contains("instagram") || urlRM.ToLower().Contains("tiktok")))
                        {
                            <div class="slide video">
                                <figure>
                                    <a href="@enlaceRM">
                                        @if (!string.IsNullOrEmpty(duracionRM))
                                        {
                                            <span class="duracion">@duracionRM</span>
                                        }
                                        @if (!string.IsNullOrEmpty(imagenRM))
                                        {
                                            string imagenRMUrlCompleta = string.Concat(ViewBag.BaseUrlContent, "/", imagenRM);
                                            <img alt="" src="@Html.ObtenerImagenConTamano(imagenRMUrlCompleta, 300)" onclick="" />
                                        }
                                        else
                                        {
                                            <img alt="" src="img/provisionales/miniatura_multimedia.png" onclick="" />
                                        }
                                    </a>
                                    <figcaption>
                                        @if (!string.IsNullOrEmpty(tipoRM))
                                        {
                                            <div class="media-type">@tipoRM</div>
                                        }
                                        @if (!string.IsNullOrEmpty(tituloRM))
                                        {
                                            <h3 class="name"><a href="@enlaceRM">@tituloRM</a></h3>
                                        }
                                    </figcaption>
                                </figure>
                            </div>
                        }
                        else if (tipoRM.Equals("Video"))
                        {
                            <div class="slide video">
                                <figure>
                                    <a href="@urlRM" class="modal-videoPlayer">
                                        @if (!string.IsNullOrEmpty(duracionRM))
                                        {
                                            <span class="duracion">@duracionRM</span>
                                        }
                                        @if (!string.IsNullOrEmpty(imagenRM))
                                        {
                                            string imagenRMUrlCompleta = string.Concat(ViewBag.BaseUrlContent, "/", imagenRM);
                                            <img alt="" src="@Html.ObtenerImagenConTamano(imagenRMUrlCompleta, 300)" onclick="" />
                                        }
                                        else
                                        {
                                            <div class="imgwrap">
                                                <div class="no-img">
                                                    <div class="outer">
                                                        <span>@Html.Translate("Imagen no disponible")</span>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    </a>
                                    <figcaption>
                                        @if (!string.IsNullOrEmpty(tipoRM))
                                        {
                                            <div class="media-type">@tipoRM</div>
                                        }
                                        @if (!string.IsNullOrEmpty(tituloRM))
                                        {
                                            <h3 class="name"><a href="@urlRM" class="modal-videoPlayer">@tituloRM</a></h3>
                                        }
                                    </figcaption>
                                </figure>
                            </div>
                        }
                    }
                </div>
                @{string urlVerMasMultimedia = Html.GetComunidad().Url + "/" + Html.Translate("URL_BUSQUEDA_MULTIMEDIA") + "?pm:relatedAuthor@@@ecidoc:p131_E82_p102_has_title=" + nombreAutor.ToLower() + "@" + idiomaNav;
                }
                <div class="ver-mas-multimedia"><a href="@urlVerMasMultimedia">@Html.Translate("VERMASMULTIMEDIA")</a></div>
            </section>
        }

    }


    @{


        if (gadgetAutoresCoetaneos != null)
        {
            GadgetResourceListModel gadgetContextoAutoresCoetaneos = gadgetAutoresCoetaneos as GadgetResourceListModel;
            if (gadgetContextoAutoresCoetaneos != null)
            {
                Guid idGadgetMasObras = gadgetContextoAutoresCoetaneos.Key;

                bool cargado = gadgetContextoAutoresCoetaneos.Resources != null && gadgetContextoAutoresCoetaneos.Resources.Count > 0;
                string displayNone = "";
                string pag = "3";
                if (!cargado)
                {
                    displayNone = "style=\"display:none\"";
                    pag = "1";
                }
                <section id="coetaneos" class="coetaneos" @Html.Raw(displayNone)>
                    <h2 class="heading">@Html.Translate("AUTORESCOETANEOS")</h2>
                    <div class="carousel inactive">
                        @if (cargado)
                        {
                            @Html.PartialView("ControlesMVC/_FichaGadget", gadgetContextoAutoresCoetaneos)
                        }
                        <div class="contenedorGadget swiper-slide" aux="coetaneos" pag="@pag" id="@idGadgetMasObras.ToString().ToLower()"></div>
                    </div>
                </section>
            }
        }

        //TIENDA EL PRADO

        <section class="tienda-prado" id="tienda-prado">
            @{

                if (propProductosTienda != null && propProductosTienda.PropertyValues != null && propProductosTienda.PropertyValues.Count > 0)
                {
                    <h2 class="heading">@Html.Translate("TIENDAPRADO")</h2>
                    <div class="carousel inactive">
                        @foreach (SemanticPropertyModel.PropertyValue productoTienda in propProductosTienda.PropertyValues)
                        {
                            string nombreProd = productoTienda.RelatedEntity.GetFirstValuePropertyByPath("http://purl.org/goodrelations/v1#name");
                            string categoria = productoTienda.RelatedEntity.GetFirstValuePropertyByPath("http://purl.org/goodrelations/v1#category");
                            string oferta = productoTienda.RelatedEntity.GetFirstValuePropertyByPath("http://museodelprado.es/ontologia/egr.owl#offer");
                            string imagenProd = productoTienda.RelatedEntity.GetFirstValuePropertyByPath("http://museodelprado.es/ontologia/egr.owl#image");
                            string web = productoTienda.RelatedEntity.GetFirstValuePropertyByPath("http://museodelprado.es/ontologia/egr.owl#web");

                            <div class="slide">
                                <figure>
                                    @if (!string.IsNullOrEmpty(web))
                                    {
                                        <a href="@web" target="_blank">
                                            @if (!string.IsNullOrEmpty(imagenProd) && !string.IsNullOrEmpty(nombreProd))
                                            {
                                                <img alt="@nombreProd" src="@ViewBag.BaseUrlContent/@imagenProd">
                                            }
                                        </a>
                                    }
                                    <figcaption>
                                        @if (!string.IsNullOrEmpty(oferta) && oferta.Equals("true"))
                                        {
                                            <div class="offer">Oferta</div>
                                        }
                                        @if (!string.IsNullOrEmpty(categoria))
                                        {
                                            <div class="media-type">@categoria</div>
                                        }
                                        @if (!string.IsNullOrEmpty(nombreProd) && !string.IsNullOrEmpty(web))
                                        {
                                            <div class="name"><a href="@web" target="_blank">@nombreProd</a></div>
                                        }
                                    </figcaption>
                                </figure>
                            </div>

                        }
                    </div>
                }
            }
            <div class="impresion-a-la-carta">
                <div>
                    <h1><a href="http://www.tiendaprado.com/toolprintondemand.php" target="_blank">@Html.Translate("IMPRESIONALACARTA")</a></h1>
                    @Html.Raw(@Html.Translate("FICHA_RECURSO_OBRA_IMPRESION"))
                </div>
                <div>
                    <h1><a href="mailto:bimnp@museodelpradodifusion.es" target="_blank">@Html.Translate("BANCODEIMAGENES")</a></h1>
                    @Html.Raw(@Html.Translate("FICHA_RECURSO_OBRA_IMAGENES"))
                </div>
            </div>
        </section>

    }
</section>
@{
    Dictionary<string, List<object>> propsJsonLD = new Dictionary<string, List<object>>();
    propsJsonLD.Add("@context", new List<object>(new string[] { "http://schema.org" }));
    propsJsonLD.Add("@type", new List<object>(new string[] { "Person" }));

    if (!string.IsNullOrEmpty(nombreAutor))
    {
        propsJsonLD.Add("name", new List<object>(new string[] { nombreAutor }));
    }

    if (!string.IsNullOrEmpty(imagen))
    {
        propsJsonLD.Add("image", new List<object>(new string[] { ViewBag.BaseUrlContent + "/" + imagen }));
    }

    if (!string.IsNullOrEmpty(descripcionAutor))
    {
        propsJsonLD.Add("description", new List<object>(new string[] { descripcionAutor }));
    }

    if (!string.IsNullOrEmpty(fechaNacimientoAutor))
    {
        propsJsonLD.Add("birthDate", new List<object>(new string[] { fechaNacimientoAutor }));
    }

    if (!string.IsNullOrEmpty(lugarNacimientoAutor))
    {
        Dictionary<string, List<object>> place = new Dictionary<string, List<object>>();
        place.Add("@type", new List<object>(new string[] { "Place " }));
        place.Add("address", new List<object>(new string[] { lugarNacimientoAutor }));

        propsJsonLD.Add("birthPlace", new List<object>(new object[] { place }));
    }

    if (!string.IsNullOrEmpty(fechaDefuncionAutor))
    {
        propsJsonLD.Add("deathDate", new List<object>(new string[] { fechaDefuncionAutor }));
    }

    if (!string.IsNullOrEmpty(lugarDefuncionAutor))
    {
        Dictionary<string, List<object>> place = new Dictionary<string, List<object>>();
        place.Add("@type", new List<object>(new string[] { "Place " }));
        place.Add("address", new List<object>(new string[] { lugarDefuncionAutor }));

        propsJsonLD.Add("deathPlace", new List<object>(new object[] { place }));
    }
}

@Html.PartialView("_scriptJsonLD", propsJsonLD)

@functions{
    public static int? GetNumberIntPropertyValueSemCms(SemanticPropertyModel pProperty)
    {
        if (pProperty != null && pProperty.PropertyValues.Count > 0 && !string.IsNullOrEmpty(pProperty.PropertyValues[0].Value))
        {
            return int.Parse(pProperty.PropertyValues[0].Value);
        }
        return 0;
    }
    public static string GetPropertyValueSemCms(SemanticPropertyModel pProperty)
    {
        if (pProperty != null && pProperty.PropertyValues.Count > 0)
        {
            return pProperty.PropertyValues[0].Value;
        }
        return "";
    }
    public class E36_Visual_Item
    {


        public E36_Visual_Item(SemanticEntityModel pSemCmsModel)
        {
            this.Pm_order = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://museodelprado.es/ontologia/pradomuseum.owl#order")).Value;
            this.Ecidoc_p3_has_note = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://museodelprado.es/ontologia/ecidoc.owl#p3_has_note"));
        }


        public int Pm_order { get; set; }

        public string Ecidoc_p3_has_note { get; set; }
    }

    public class E78_Collection
    {


        public E78_Collection(SemanticEntityModel pSemCmsModel)
        {
            this.Dc_title = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/title"));
            this.Dc_description = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/description"));
            SemanticPropertyModel propPm_subcollection = pSemCmsModel.GetPropertyByPath("http://museodelprado.es/ontologia/pradomuseum.owl#subcollection_1");
            if (propPm_subcollection != null && propPm_subcollection.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propPm_subcollection.PropertyValues)
                {
                    Pm_subcollection_1.Add(new Pm_Subcollection_1(propValue.RelatedEntity));
                }
                Pm_subcollection_1 = Pm_subcollection_1.OrderBy(x => x.Pm_order).ToList();



            }
            SemanticPropertyModel propSioc_links = pSemCmsModel.GetPropertyByPath("http://rdfs.org/sioc/ns#links_to");
            if (propSioc_links != null && propSioc_links.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propSioc_links.PropertyValues)
                {
                    Sioc_links_to.Add(new Pm_Link(propValue.RelatedEntity));
                }
                Sioc_links_to = Sioc_links_to.OrderBy(x => x.Pm_order).ToList();



            }
        }

        public string Dc_title { get; set; }

        public string Dc_description { get; set; }

        public List<Pm_Subcollection_1> Pm_subcollection_1 { get; set; } = new List<Pm_Subcollection_1>();

        public List<Pm_Link> Sioc_links_to { get; set; } = new List<Pm_Link>();
    }

    public class Pm_Subcollection_1
    {


        public Pm_Subcollection_1(SemanticEntityModel pSemCmsModel)
        {
            this.Dc_title = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/title"));
            this.Dc_description = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/description"));
            this.Pm_order = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://museodelprado.es/ontologia/pradomuseum.owl#order")).Value;
            this.multiLan_filter = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://museodelprado.es/ontologia/multilang-property.owl#filter"));
            SemanticPropertyModel propPm_artworkOrder = pSemCmsModel.GetPropertyByPath("http://museodelprado.es/ontologia/pradomuseum.owl#artworkOrder");
            if (propPm_artworkOrder != null && propPm_artworkOrder.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propPm_artworkOrder.PropertyValues)
                {
                    Pm_artworkOrder.Add(new Pm_Order(propValue.RelatedEntity));
                }
                Pm_artworkOrder = Pm_artworkOrder.OrderBy(x => x.Pm_order).ToList();
            }
            SemanticPropertyModel propPm_subcollection = pSemCmsModel.GetPropertyByPath("http://museodelprado.es/ontologia/pradomuseum.owl#subcollection_2");
            if (propPm_subcollection != null && propPm_subcollection.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propPm_subcollection.PropertyValues)
                {
                    Pm_subcollection_2.Add(new Pm_Subcollection_2(propValue.RelatedEntity));
                }
                Pm_subcollection_2 = Pm_subcollection_2.OrderBy(x => x.Pm_order).ToList();
            }

            SemanticPropertyModel propPm_relatedArtwork = pSemCmsModel.GetPropertyByPath("http://museodelprado.es/ontologia/pradomuseum.owl#relatedArtwork");
            if (propPm_relatedArtwork != null && propPm_relatedArtwork.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propPm_relatedArtwork.PropertyValues)
                {
                    // Pm_subcollection_3.Add(new Pm_Subcollection_3(propValue.RelatedEntity));
                    SemanticPropertyModel propPm_identifier = propValue.RelatedEntity.GetPropertyByPath("http://www.cidoc-crm.org/cidoc-crm#p48_has_preferred_identifier");
                    if (propPm_identifier != null && propPm_identifier.PropertyValues.Count > 0)
                    {
                        Pm_relatedArtwork.Add(GetPropertyValueSemCms(propPm_identifier.PropertyValues.First().RelatedEntity.GetPropertyByPath("http://www.cidoc-crm.org/cidoc-crm#p102_has_title")));
                    }
                }
            }
            foreach (string relatedArtworkId in Pm_relatedArtwork)
            {
                if (!string.IsNullOrEmpty(relatedArtworkId))
                {
                    multiLan_filter += "cidoc:p48_has_preferred_identifier@@@cidoc:p102_has_title=" + relatedArtworkId + "&";
                }

            }
        }

        public string Dc_title { get; set; }
        public string Dc_description { get; set; }
        public int Pm_order { get; set; }
        public string multiLan_filter { get; set; }
        public List<Pm_Order> Pm_artworkOrder { get; set; } = new List<Pm_Order>();
        public List<string> Pm_relatedArtwork { get; set; } = new List<string>();
        public List<Pm_Subcollection_2> Pm_subcollection_2 { get; set; } = new List<Pm_Subcollection_2>();
    }

    public class Pm_Subcollection_2
    {


        public Pm_Subcollection_2(SemanticEntityModel pSemCmsModel)
        {
            this.Dc_title = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/title"));
            this.Dc_description = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/description"));
            this.Pm_order = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://museodelprado.es/ontologia/pradomuseum.owl#order")).Value;
            this.multiLan_filter = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://museodelprado.es/ontologia/multilang-property.owl#filter"));
            SemanticPropertyModel propPm_artworkOrder = pSemCmsModel.GetPropertyByPath("http://museodelprado.es/ontologia/pradomuseum.owl#artworkOrder");
            if (propPm_artworkOrder != null && propPm_artworkOrder.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propPm_artworkOrder.PropertyValues)
                {
                    Pm_artworkOrder.Add(new Pm_Order(propValue.RelatedEntity));
                }
                Pm_artworkOrder = Pm_artworkOrder.OrderBy(x => x.Pm_order).ToList();
            }
            SemanticPropertyModel propPm_subcollection = pSemCmsModel.GetPropertyByPath("http://museodelprado.es/ontologia/pradomuseum.owl#subcollection_3");
            if (propPm_subcollection != null && propPm_subcollection.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propPm_subcollection.PropertyValues)
                {
                    Pm_subcollection_3.Add(new Pm_Subcollection_3(propValue.RelatedEntity));
                }
                Pm_subcollection_3 = Pm_subcollection_3.OrderBy(x => x.Pm_order).ToList();
            }

            SemanticPropertyModel propPm_relatedArtwork = pSemCmsModel.GetPropertyByPath("http://museodelprado.es/ontologia/pradomuseum.owl#relatedArtwork");
            if (propPm_relatedArtwork != null && propPm_relatedArtwork.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propPm_relatedArtwork.PropertyValues)
                {
                    // Pm_subcollection_3.Add(new Pm_Subcollection_3(propValue.RelatedEntity));
                    SemanticPropertyModel propPm_identifier = propValue.RelatedEntity.GetPropertyByPath("http://www.cidoc-crm.org/cidoc-crm#p48_has_preferred_identifier");
                    if (propPm_identifier != null && propPm_identifier.PropertyValues.Count > 0)
                    {
                        Pm_relatedArtwork.Add(GetPropertyValueSemCms(propPm_identifier.PropertyValues.First().RelatedEntity.GetPropertyByPath("http://www.cidoc-crm.org/cidoc-crm#p102_has_title")));
                    }
                }
            }
            foreach (string relatedArtworkId in Pm_relatedArtwork)
            {
                if (!string.IsNullOrEmpty(relatedArtworkId))
                {
                    multiLan_filter += "cidoc:p48_has_preferred_identifier@@@cidoc:p102_has_title=" + relatedArtworkId + "&";
                }

            }
            if (!string.IsNullOrEmpty(Dc_description) && Pm_subcollection_3.Count() > 0)
            {
                this.multiLan_filter = Pm_subcollection_3.First().multiLan_filter;
            }

        }

        public string Dc_title { get; set; }
        public string Dc_description { get; set; }
        public int Pm_order { get; set; }
        public string multiLan_filter { get; set; }
        public List<Pm_Order> Pm_artworkOrder { get; set; } = new List<Pm_Order>();
        public List<string> Pm_relatedArtwork { get; set; } = new List<string>();
        public List<Pm_Subcollection_3> Pm_subcollection_3 { get; set; } = new List<Pm_Subcollection_3>();
    }

    public class Pm_Subcollection_3
    {
        public Pm_Subcollection_3(SemanticEntityModel pSemCmsModel)
        {
            this.Dc_title = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/title"));
            this.Dc_description = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/description"));
            this.Pm_order = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://museodelprado.es/ontologia/pradomuseum.owl#order")).Value;
            this.multiLan_filter = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://museodelprado.es/ontologia/multilang-property.owl#filter"));
            SemanticPropertyModel propPm_artworkOrder = pSemCmsModel.GetPropertyByPath("http://museodelprado.es/ontologia/pradomuseum.owl#artworkOrder");
            if (propPm_artworkOrder != null && propPm_artworkOrder.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propPm_artworkOrder.PropertyValues)
                {
                    Pm_artworkOrder.Add(new Pm_Order(propValue.RelatedEntity));
                }
                Pm_artworkOrder = Pm_artworkOrder.OrderBy(x => x.Pm_order).ToList();
            }
            SemanticPropertyModel propPm_relatedArtwork = pSemCmsModel.GetPropertyByPath("http://museodelprado.es/ontologia/pradomuseum.owl#relatedArtwork");
            if (propPm_relatedArtwork != null && propPm_relatedArtwork.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propPm_relatedArtwork.PropertyValues)
                {
                    // Pm_subcollection_3.Add(new Pm_Subcollection_3(propValue.RelatedEntity));
                    SemanticPropertyModel propPm_identifier = propValue.RelatedEntity.GetPropertyByPath("http://www.cidoc-crm.org/cidoc-crm#p48_has_preferred_identifier");
                    if (propPm_identifier != null && propPm_identifier.PropertyValues.Count > 0)
                    {
                        Pm_relatedArtwork.Add(GetPropertyValueSemCms(propPm_identifier.PropertyValues.First().RelatedEntity.GetPropertyByPath("http://www.cidoc-crm.org/cidoc-crm#p102_has_title")));
                    }
                }
            }
            foreach (string relatedArtworkId in Pm_relatedArtwork)
            {
                if (!string.IsNullOrEmpty(relatedArtworkId))
                {
                    multiLan_filter += "cidoc:p48_has_preferred_identifier@@@cidoc:p102_has_title=" + relatedArtworkId + "&";
                }

            }
        }

        public string Dc_title { get; set; }
        public string Dc_description { get; set; }
        public int Pm_order { get; set; }
        public string multiLan_filter { get; set; }
        public List<Pm_Order> Pm_artworkOrder { get; set; } = new List<Pm_Order>();
        public List<string> Pm_relatedArtwork { get; set; } = new List<string>();
    }

    public class Pm_Link
    {
        public Pm_Link(SemanticEntityModel pSemCmsModel)
        {
            this.Dc_title = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/title"));
            this.Pm_value = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://museodelprado.es/ontologia/pradomuseum.owl#value"));
            this.Pm_order = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://museodelprado.es/ontologia/pradomuseum.owl#order")).Value;
        }

        public string Dc_title { get; set; }
        public string Pm_value { get; set; }
        public int Pm_order { get; set; }
    }

    public class Pm_Order
    {
        public Pm_Order(SemanticEntityModel pSemCmsModel)
        {
            this.Dc_title = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/title"));
            this.Pm_value = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://museodelprado.es/ontologia/pradomuseum.owl#value"));
            this.Pm_order = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://museodelprado.es/ontologia/pradomuseum.owl#order")).Value;
        }

        public string Dc_title { get; set; }
        public string Pm_value { get; set; }
        public int Pm_order { get; set; }
    }
}

